{
    "name": "cooking",
    "answer": "(define (domain cooking)\n    (:requirements :strips)\n    (:predicates\n        (available ?x - vegetable)\n        (is-whole ?x - vegetable)\n        (is-sliced ?x - vegetable)\n        (free ?r - robot)\n        (carry ?r - robot ?t - tool)\n        (can-cut ?t - tool)\n        (at ?x - vegetable ?l - location)\n        (is-workspace ?l - location)\n    )\n    (:action pick\n        :parameters (?r - robot ?x - vegetable ?l - location)\n        :precondition (and (free ?r) (available ?x) (at ?x ?l))\n        :effect (and \n            (not (free ?r)) \n            (not (available ?x)) \n            (carry ?r ?x)\n        )\n    )\n    (:action place\n        :parameters (?r - robot ?x - vegetable ?l - location)\n        :precondition (and (carry ?r ?x) (not (at ?x ?l)))\n        :effect (and \n            (not (carry ?r ?x))\n            (free ?r)\n            (available ?x)\n            (at ?x ?l)\n        )\n    )\n    (:action slice\n        :parameters (?r - robot ?t - tool ?x - vegetable ?l - location)\n        :precondition (and \n            (carry ?r ?t)\n            (can-cut ?t)\n            (is-workspace ?l)\n            (is-whole ?x)\n            (at ?x ?l)\n        )\n        :effect (and \n            (not (is-whole ?x))\n            (is-sliced ?x)\n        )\n    )\n)"
}